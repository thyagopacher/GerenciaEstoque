/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import negocio.CategoriaProdutoRN;
import negocio.CategoriasProdutoRN;
import negocio.ComprarRN;
import negocio.DescontoRN;
import negocio.ImagemProdutoRN;
import negocio.LojaRN;
import negocio.PessoaRN;
import negocio.ProdutoRN;
import negocio.VendedorRN;
import persistencia.Conexao;
import recursos.utilitarios.Mascara;
import recursos.utilitarios.TableModel;
import recursos.utilitarios.Upload;
import vo.CategoriaProduto;
import vo.CategoriasProduto;
import vo.Comprar;
import vo.Desconto;
import vo.ImagemProduto;
import vo.Loja;
import vo.Pessoa;
import vo.Produto;
import vo.Vendedor;

/**
 *
 * @author ThyagoHenrique
 */
public class JFGerenciaProduto extends javax.swing.JFrame {

     String                   titulo_imagens[]    = new String[]{"Código", "Nome"};
     String                   titulo[]            = new String[]{"Código", "Nome", "Preço", "Quantidade"};
     String                   titulo_desconto[]   = new String[]{"Qtd min", "Qtd máx", "Valor"};
     TableModel               tm                  = new TableModel(titulo, 1, titulo.length);       
     Conexao                  cx;
     List<Produto>            obj                 = new ArrayList<>(100);
     PessoaRN                 pern                = new PessoaRN();
     Pessoa                   pessoa              = new Pessoa();
     Produto                  produto             = new Produto();
     ProdutoRN                prn                 = new ProdutoRN();
     CategoriaProdutoRN       crn                 = new CategoriaProdutoRN();
     List<CategoriaProduto>   obj_categoria       = new ArrayList<>(10);
     CategoriaProduto         categoria           = new CategoriaProduto();
     DescontoRN               drn                 = new DescontoRN();
     List<Desconto>           obj_desconto        = new ArrayList<>(20);
     List<Pessoa>             obj_pessoa          = new ArrayList<>(100);
     Desconto                 desconto            = new Desconto();
     Upload                   upload;
     ImagemProduto            iproduto            = new ImagemProduto();
     ImagemProdutoRN          irn                 = new ImagemProdutoRN();
     List<ImagemProduto>      obj_imagem          = new ArrayList<>(100);
     LojaRN                   lrn                 = new LojaRN();
     Loja                     loja                = new Loja();
     CategoriasProdutoRN      csrn                = new CategoriasProdutoRN();
     CategoriasProduto        categorias          = new CategoriasProduto();
     String                   titulo_categorias[] = new String[]{"Código", "Nome"};
     List<CategoriasProduto>  obj_categorias; 
     private boolean          novacategoria       = false;
     private boolean          atualizafornecedor  = false;
     private boolean          atualizavendedor    = false;
     Mascara                  mas                 = new Mascara();
     ComprarRN                corn                = new ComprarRN();
     Comprar                  comprar             = new Comprar();
     VendedorRN               vrn                 = new VendedorRN();
     Vendedor                 vendedor            = new Vendedor();
     List<Vendedor>           obj_vendedor        = new ArrayList();
     /**
      * Creates new form JFGerenciaProduto
      */
     public JFGerenciaProduto() {
          this.obj_categorias = new ArrayList<>(10);
          initComponents();
     }
     
     public JFGerenciaProduto(Conexao cx) {
        this.obj_categorias = new ArrayList(10);
          initComponents();
          this.cx = cx;
          procuraLoja();
          tabela.setModel(tm);
          tabela_imagens.setModel(tm);
          tabela_categorias.setModel(tm);
     }  
     /**
      * This method is called from within the constructor to initialize the
      * form. WARNING: Do NOT modify this code. The content of this method is
      * always regenerated by the Form Editor.
      */
     @SuppressWarnings("unchecked")
     // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
     private void initComponents() {

          jTabbedPane1 = new javax.swing.JTabbedPane();
          jPanel1 = new javax.swing.JPanel();
          jLabel2 = new javax.swing.JLabel();
          tnome = new javax.swing.JTextField();
          jLabel4 = new javax.swing.JLabel();
          tquantidade = new javax.swing.JTextField();
          bsair = new javax.swing.JButton();
          botao_excluir = new javax.swing.JButton();
          botao_update = new javax.swing.JButton();
          botao_inserir = new javax.swing.JButton();
          jLabel6 = new javax.swing.JLabel();
          ccategoria = new javax.swing.JComboBox();
          jLabel7 = new javax.swing.JLabel();
          testoquebaixo = new javax.swing.JTextField();
          jLabel8 = new javax.swing.JLabel();
          tlargura = new javax.swing.JTextField();
          Profundidade = new javax.swing.JLabel();
          tprofundidade = new javax.swing.JTextField();
          jLabel11 = new javax.swing.JLabel();
          tcodigobarra = new javax.swing.JTextField();
          blimpar = new javax.swing.JButton();
          jLabel12 = new javax.swing.JLabel();
          bcarrega_imagem = new javax.swing.JButton();
          jLabel10 = new javax.swing.JLabel();
          taltura = new javax.swing.JTextField();
          jLabel17 = new javax.swing.JLabel();
          tpeso = new javax.swing.JTextField();
          jLabel18 = new javax.swing.JLabel();
          tpalavrachave = new javax.swing.JTextField();
          cvisivel = new javax.swing.JCheckBox();
          cvisivel2 = new javax.swing.JCheckBox();
          badiciona_categoria = new javax.swing.JButton();
          jLabel19 = new javax.swing.JLabel();
          tpreconormal = new javax.swing.JTextField();
          bchama_cadastro = new javax.swing.JButton();
          jLabel1 = new javax.swing.JLabel();
          cfornecedor = new javax.swing.JComboBox();
          badicionar_fornecedor = new javax.swing.JButton();
          jLabel9 = new javax.swing.JLabel();
          tdesconto = new javax.swing.JTextField();
          jLabel20 = new javax.swing.JLabel();
          tprecocusto = new javax.swing.JTextField();
          jLabel21 = new javax.swing.JLabel();
          tcomissao = new javax.swing.JTextField();
          jLabel22 = new javax.swing.JLabel();
          tprecovenda = new javax.swing.JTextField();
          jLabel23 = new javax.swing.JLabel();
          tprecovarejo = new javax.swing.JTextField();
          bcalculavenda = new javax.swing.JButton();
          jLabel3 = new javax.swing.JLabel();
          cvendedor = new javax.swing.JComboBox();
          badicionar_vendedor = new javax.swing.JButton();
          jPanel5 = new javax.swing.JPanel();
          jScrollPane3 = new javax.swing.JScrollPane();
          tabela_categorias = new javax.swing.JTable();
          bexcluir_categorias = new javax.swing.JButton();
          jPanel2 = new javax.swing.JPanel();
          jLabel5 = new javax.swing.JLabel();
          tnomeproc = new javax.swing.JTextField();
          bprocurar = new javax.swing.JButton();
          jScrollPane1 = new javax.swing.JScrollPane();
          tabela = new javax.swing.JTable();
          jPanel3 = new javax.swing.JPanel();
          jLabel13 = new javax.swing.JLabel();
          jLabel14 = new javax.swing.JLabel();
          jLabel15 = new javax.swing.JLabel();
          tprod_desconto = new javax.swing.JTextField();
          tqtdmin = new javax.swing.JTextField();
          tqtdmax = new javax.swing.JTextField();
          jLabel16 = new javax.swing.JLabel();
          tvalor = new javax.swing.JTextField();
          bsair2 = new javax.swing.JButton();
          bexcluir = new javax.swing.JButton();
          bupdate = new javax.swing.JButton();
          binserir = new javax.swing.JButton();
          jPanel4 = new javax.swing.JPanel();
          jScrollPane2 = new javax.swing.JScrollPane();
          tabela_imagens = new javax.swing.JTable();
          bexcluir_imagem = new javax.swing.JButton();
          jPanel6 = new javax.swing.JPanel();
          jScrollPane4 = new javax.swing.JScrollPane();
          tabela_imagens1 = new javax.swing.JTable();
          bexcluir_imagem1 = new javax.swing.JButton();
          jTextField1 = new javax.swing.JTextField();

          setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
          setTitle("Cadastro de Produtos");
          addWindowListener(new java.awt.event.WindowAdapter() {
               public void windowOpened(java.awt.event.WindowEvent evt) {
                    formWindowOpened(evt);
               }
          });

          jTabbedPane1.addFocusListener(new java.awt.event.FocusAdapter() {
               public void focusGained(java.awt.event.FocusEvent evt) {
                    jTabbedPane1FocusGained(evt);
               }
          });

          jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
               public void componentShown(java.awt.event.ComponentEvent evt) {
                    jPanel1ComponentShown(evt);
               }
          });
          jPanel1.addFocusListener(new java.awt.event.FocusAdapter() {
               public void focusGained(java.awt.event.FocusEvent evt) {
                    jPanel1FocusGained(evt);
               }
          });

          jLabel2.setText("Nome");

          jLabel4.setText("Quantidade");

          tquantidade.addKeyListener(new java.awt.event.KeyAdapter() {
               public void keyTyped(java.awt.event.KeyEvent evt) {
                    tquantidadeKeyTyped(evt);
               }
          });

          bsair.setText("Sair");
          bsair.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    bsairActionPerformed(evt);
               }
          });

          botao_excluir.setText("Excluir");
          botao_excluir.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    botao_excluirActionPerformed(evt);
               }
          });

          botao_update.setText("update");
          botao_update.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    botao_updateActionPerformed(evt);
               }
          });

          botao_inserir.setText("Inserir");
          botao_inserir.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    botao_inserirActionPerformed(evt);
               }
          });

          jLabel6.setText("Categoria");

          ccategoria.addMouseListener(new java.awt.event.MouseAdapter() {
               public void mouseClicked(java.awt.event.MouseEvent evt) {
                    ccategoriaMouseClicked(evt);
               }
          });
          ccategoria.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ccategoriaActionPerformed(evt);
               }
          });

          jLabel7.setText("Estoque baixo");

          testoquebaixo.addKeyListener(new java.awt.event.KeyAdapter() {
               public void keyTyped(java.awt.event.KeyEvent evt) {
                    testoquebaixoKeyTyped(evt);
               }
          });

          jLabel8.setText("Largura");

          tlargura.setToolTipText("medida em centimetros");

          Profundidade.setText("Profundidade");

          tprofundidade.setToolTipText("medida em centimetros");

          jLabel11.setText("Código");

          tcodigobarra.setToolTipText("Coloque o Código de barra");
          tcodigobarra.addKeyListener(new java.awt.event.KeyAdapter() {
               public void keyReleased(java.awt.event.KeyEvent evt) {
                    tcodigobarraKeyReleased(evt);
               }
          });

          blimpar.setText("Limpar campos");
          blimpar.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    blimparActionPerformed(evt);
               }
          });

          jLabel12.setText("Imagem");

          bcarrega_imagem.setText("Carrega Imagem");
          bcarrega_imagem.setToolTipText("<html>\n<div style=\"width=100px; text-align: justify\">\nCarregar Imagem para o site, certifique-se de que o produto já foi inserido para a imagem. Pois como você pode inserir várias imagens para cada produto então há a necessidade de ele já ser pre-existente.\n</div>\n<html>");
          bcarrega_imagem.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    bcarrega_imagemActionPerformed(evt);
               }
          });

          jLabel10.setText("Altura");

          taltura.setToolTipText("medida em centimetros");

          jLabel17.setText("Peso");

          tpeso.setToolTipText("gramas");

          jLabel18.setText("Palavra-chave");

          cvisivel.setText("Produto visivel");
          cvisivel.setToolTipText("Coloca o produto visivel na loja sem destaque");

          cvisivel2.setText("Produto em destaque");
          cvisivel2.setToolTipText("Coloca o produto em destaque na página inicial");

          badiciona_categoria.setText("Add");
          badiciona_categoria.setToolTipText("Adicionar produto a mais uma categoria");
          badiciona_categoria.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    badiciona_categoriaActionPerformed(evt);
               }
          });

          jLabel19.setText("P. Normal");
          jLabel19.setToolTipText("Preço de venda a vista");

          tpreconormal.setHorizontalAlignment(javax.swing.JTextField.LEFT);
          tpreconormal.setToolTipText("Preço do produto para venda mais impostos");

          bchama_cadastro.setText("+");
          bchama_cadastro.setToolTipText("Inserir nova categoria de produto");
          bchama_cadastro.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    bchama_cadastroActionPerformed(evt);
               }
          });

          jLabel1.setText("Fábricante");

          cfornecedor.setToolTipText("Fabricantes para produtos");
          cfornecedor.addMouseListener(new java.awt.event.MouseAdapter() {
               public void mouseClicked(java.awt.event.MouseEvent evt) {
                    cfornecedorMouseClicked(evt);
               }
          });
          cfornecedor.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cfornecedorActionPerformed(evt);
               }
          });

          badicionar_fornecedor.setText("+");
          badicionar_fornecedor.setToolTipText("Adicionar novos fornecedores");
          badicionar_fornecedor.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    badicionar_fornecedorActionPerformed(evt);
               }
          });

          jLabel9.setText("Desconto");
          jLabel9.setToolTipText("Porcentagem de desconto");

          tdesconto.setToolTipText("Coloque a porcentagem de desconto para produtos a serem vendidos na loja, NÃO COLOQUE %");

          jLabel20.setText("Preço de custo");

          jLabel21.setText("Comissão");

          tcomissao.setToolTipText("Porcentagem de ganho da loja, coloque somente se quiser que seja calculado automaticamente o campo preço venda a partir do preço de custo, coloque sem %\n");

          jLabel22.setText("Preço venda");

          tprecovenda.setToolTipText("Preço de venda que irá aparecer no site, substitue o preço normal");

          jLabel23.setText("Preço varejo");

          bcalculavenda.setText("Calcula Venda");
          bcalculavenda.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    bcalculavendaActionPerformed(evt);
               }
          });

          jLabel3.setText("Vendedor");

          cvendedor.setToolTipText("Vendedores cadastrados, define o vendedor opcionalmente só para o site");
          cvendedor.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cvendedorActionPerformed(evt);
               }
          });

          badicionar_vendedor.setText("+");
          badicionar_vendedor.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    badicionar_vendedorActionPerformed(evt);
               }
          });

          javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
          jPanel1.setLayout(jPanel1Layout);
          jPanel1Layout.setHorizontalGroup(
               jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(12, 12, 12)
                    .addComponent(tcodigobarra, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(12, 12, 12)
                    .addComponent(ccategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(27, 27, 27)
                    .addComponent(badiciona_categoria)
                    .addGap(10, 10, 10)
                    .addComponent(bchama_cadastro)
                    .addGap(35, 35, 35)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addGroup(jPanel1Layout.createSequentialGroup()
                              .addGap(44, 44, 44)
                              .addComponent(tnome, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))))
               .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jLabel4)
                    .addGap(18, 18, 18)
                    .addComponent(tquantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(27, 27, 27)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(testoquebaixo, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)
                    .addComponent(tlargura, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(27, 27, 27)
                    .addComponent(Profundidade, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(tprofundidade, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(23, 23, 23)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(26, 26, 26)
                    .addComponent(taltura, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)
                    .addComponent(tpeso, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(27, 27, 27)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(tpalavrachave, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)
                    .addComponent(tpreconormal, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(27, 27, 27)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(50, 50, 50)
                    .addComponent(tprecocusto, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(12, 12, 12)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(4, 4, 4)
                    .addComponent(tprecovarejo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(24, 24, 24)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)
                    .addComponent(tprecovenda, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(cvisivel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(cvisivel))
               .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(16, 16, 16)
                    .addComponent(tdesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(331, 331, 331)
                    .addComponent(blimpar)
                    .addGap(18, 18, 18)
                    .addComponent(botao_inserir)
                    .addGap(10, 10, 10)
                    .addComponent(botao_update)
                    .addGap(18, 18, 18)
                    .addComponent(botao_excluir)
                    .addGap(18, 18, 18)
                    .addComponent(bsair))
               .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jLabel12)
                    .addGap(18, 18, 18)
                    .addComponent(bcarrega_imagem, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(jPanel1Layout.createSequentialGroup()
                              .addGap(10, 10, 10)
                              .addComponent(jLabel1))
                         .addGroup(jPanel1Layout.createSequentialGroup()
                              .addContainerGap()
                              .addComponent(jLabel3)))
                    .addGap(21, 21, 21)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                         .addComponent(cfornecedor, 0, 119, Short.MAX_VALUE)
                         .addComponent(cvendedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(6, 6, 6)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                         .addComponent(badicionar_fornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                         .addComponent(badicionar_vendedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(10, 10, 10)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(48, 48, 48)
                    .addComponent(tcomissao, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(17, 17, 17)
                    .addComponent(bcalculavenda, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
          );
          jPanel1Layout.setVerticalGroup(
               jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(11, 11, 11)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(jPanel1Layout.createSequentialGroup()
                              .addGap(3, 3, 3)
                              .addComponent(jLabel11))
                         .addComponent(tcodigobarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(10, 10, 10)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(jPanel1Layout.createSequentialGroup()
                              .addGap(4, 4, 4)
                              .addComponent(jLabel6))
                         .addGroup(jPanel1Layout.createSequentialGroup()
                              .addGap(1, 1, 1)
                              .addComponent(ccategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                         .addComponent(badiciona_categoria)
                         .addComponent(bchama_cadastro)
                         .addGroup(jPanel1Layout.createSequentialGroup()
                              .addGap(1, 1, 1)
                              .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(jLabel2))
                                   .addComponent(tnome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGap(11, 11, 11)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(tquantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(testoquebaixo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addGroup(jPanel1Layout.createSequentialGroup()
                              .addGap(3, 3, 3)
                              .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addComponent(jLabel4)
                                   .addComponent(jLabel7))))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(tlargura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(tprofundidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(taltura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addGroup(jPanel1Layout.createSequentialGroup()
                              .addGap(3, 3, 3)
                              .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addComponent(jLabel8)
                                   .addComponent(Profundidade)
                                   .addComponent(jLabel10))))
                    .addGap(19, 19, 19)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(tpeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(tpalavrachave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addGroup(jPanel1Layout.createSequentialGroup()
                              .addGap(3, 3, 3)
                              .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addComponent(jLabel17)
                                   .addComponent(jLabel18))))
                    .addGap(22, 22, 22)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(tpreconormal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(tprecocusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(tprecovarejo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(tprecovenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addGroup(jPanel1Layout.createSequentialGroup()
                              .addGap(3, 3, 3)
                              .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addComponent(jLabel19)
                                   .addComponent(jLabel20)
                                   .addComponent(jLabel23)
                                   .addComponent(jLabel22))))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(jPanel1Layout.createSequentialGroup()
                              .addGap(4, 4, 4)
                              .addComponent(jLabel1))
                         .addGroup(jPanel1Layout.createSequentialGroup()
                              .addGap(1, 1, 1)
                              .addComponent(cfornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                         .addComponent(badicionar_fornecedor)
                         .addGroup(jPanel1Layout.createSequentialGroup()
                              .addGap(4, 4, 4)
                              .addComponent(jLabel21))
                         .addGroup(jPanel1Layout.createSequentialGroup()
                              .addGap(1, 1, 1)
                              .addComponent(tcomissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                         .addComponent(bcalculavenda))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(jLabel3)
                         .addComponent(cvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(badicionar_vendedor))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(cvisivel2)
                         .addComponent(cvisivel))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(jPanel1Layout.createSequentialGroup()
                              .addGap(3, 3, 3)
                              .addComponent(jLabel9))
                         .addComponent(tdesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(25, 25, 25)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(blimpar)
                         .addComponent(botao_inserir)
                         .addComponent(botao_update)
                         .addComponent(botao_excluir)
                         .addComponent(bsair))
                    .addGap(16, 16, 16)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(jPanel1Layout.createSequentialGroup()
                              .addGap(4, 4, 4)
                              .addComponent(jLabel12))
                         .addComponent(bcarrega_imagem)))
          );

          jTabbedPane1.addTab("Cadastro", jPanel1);

          tabela_categorias.setModel(new javax.swing.table.DefaultTableModel(
               new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
               },
               new String [] {
                    "Title 1", "Title 2", "Title 3", "Title 4"
               }
          ));
          tabela_categorias.addMouseListener(new java.awt.event.MouseAdapter() {
               public void mouseClicked(java.awt.event.MouseEvent evt) {
                    tabela_categoriasMouseClicked(evt);
               }
          });
          jScrollPane3.setViewportView(tabela_categorias);

          bexcluir_categorias.setText("Excluir");
          bexcluir_categorias.setToolTipText("Selecione algum para excluir");
          bexcluir_categorias.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    bexcluir_categoriasActionPerformed(evt);
               }
          });

          javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
          jPanel5.setLayout(jPanel5Layout);
          jPanel5Layout.setHorizontalGroup(
               jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(jPanel5Layout.createSequentialGroup()
                              .addGap(185, 185, 185)
                              .addComponent(bexcluir_categorias, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                         .addGroup(jPanel5Layout.createSequentialGroup()
                              .addGap(36, 36, 36)
                              .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 766, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(56, Short.MAX_VALUE))
          );
          jPanel5Layout.setVerticalGroup(
               jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(bexcluir_categorias)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                    .addContainerGap())
          );

          jTabbedPane1.addTab("Categorias do Produto", jPanel5);

          jLabel5.setText("Nome");

          bprocurar.setText("Procurar");
          bprocurar.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    bprocurarActionPerformed(evt);
               }
          });

          tabela.setModel(new javax.swing.table.DefaultTableModel(
               new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
               },
               new String [] {
                    "Código", "Nome", "Preço", "Quantidade"
               }
          ));
          tabela.addMouseListener(new java.awt.event.MouseAdapter() {
               public void mouseClicked(java.awt.event.MouseEvent evt) {
                    tabelaMouseClicked(evt);
               }
          });
          jScrollPane1.setViewportView(tabela);

          javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
          jPanel2.setLayout(jPanel2Layout);
          jPanel2Layout.setHorizontalGroup(
               jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(jPanel2Layout.createSequentialGroup()
                              .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
                              .addContainerGap())
                         .addGroup(jPanel2Layout.createSequentialGroup()
                              .addComponent(jLabel5)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(tnomeproc)
                              .addGap(18, 18, 18)
                              .addComponent(bprocurar)
                              .addGap(30, 30, 30))))
          );
          jPanel2Layout.setVerticalGroup(
               jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(jLabel5)
                         .addComponent(tnomeproc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(bprocurar))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                    .addContainerGap())
          );

          jTabbedPane1.addTab("Procura", jPanel2);

          jLabel13.setText("Produto");

          jLabel14.setText("Qtd min.");

          jLabel15.setText("Qtd máx.");

          tprod_desconto.setEditable(false);
          tprod_desconto.setBackground(new java.awt.Color(255, 255, 255));

          jLabel16.setText("Valor");

          bsair2.setText("Sair");
          bsair2.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    bsair2ActionPerformed(evt);
               }
          });

          bexcluir.setText("Excluir");
          bexcluir.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    bexcluirActionPerformed(evt);
               }
          });

          bupdate.setText("update");
          bupdate.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    bupdateActionPerformed(evt);
               }
          });

          binserir.setText("Inserir");
          binserir.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    binserirActionPerformed(evt);
               }
          });

          javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
          jPanel3.setLayout(jPanel3Layout);
          jPanel3Layout.setHorizontalGroup(
               jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                         .addGroup(jPanel3Layout.createSequentialGroup()
                              .addComponent(binserir)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                              .addComponent(bupdate)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                              .addComponent(bexcluir)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                              .addComponent(bsair2))
                         .addGroup(jPanel3Layout.createSequentialGroup()
                              .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                   .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                   .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(tqtdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel15)
                                        .addGap(18, 18, 18)
                                        .addComponent(tqtdmax, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tvalor, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                   .addComponent(tprod_desconto, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addContainerGap(244, Short.MAX_VALUE))
          );
          jPanel3Layout.setVerticalGroup(
               jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(jLabel13)
                         .addComponent(tprod_desconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(jLabel14)
                         .addComponent(jLabel15)
                         .addComponent(tqtdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(tqtdmax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(jLabel16)
                         .addComponent(tvalor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(bsair2)
                         .addComponent(bexcluir)
                         .addComponent(bupdate)
                         .addComponent(binserir))
                    .addContainerGap(378, Short.MAX_VALUE))
          );

          jTabbedPane1.addTab("Regra de Desconto", jPanel3);

          tabela_imagens.setModel(new javax.swing.table.DefaultTableModel(
               new Object [][] {
                    {null, null},
                    {null, null},
                    {null, null},
                    {null, null}
               },
               new String [] {
                    "Código", "Nome"
               }
          ));
          tabela_imagens.setToolTipText("Ao clicar em nome a imagem irá aparecer no brownser");
          tabela_imagens.addMouseListener(new java.awt.event.MouseAdapter() {
               public void mouseClicked(java.awt.event.MouseEvent evt) {
                    tabela_imagensMouseClicked(evt);
               }
          });
          jScrollPane2.setViewportView(tabela_imagens);

          bexcluir_imagem.setText("Excluir Imagem Selecionada");
          bexcluir_imagem.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    bexcluir_imagemActionPerformed(evt);
               }
          });

          javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
          jPanel4.setLayout(jPanel4Layout);
          jPanel4Layout.setHorizontalGroup(
               jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addGap(175, 361, Short.MAX_VALUE)
                    .addComponent(bexcluir_imagem, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(276, 276, 276))
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 766, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          );
          jPanel4Layout.setVerticalGroup(
               jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(bexcluir_imagem)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                    .addGap(32, 32, 32))
          );

          jTabbedPane1.addTab("Imagens Produto", jPanel4);

          tabela_imagens1.setModel(new javax.swing.table.DefaultTableModel(
               new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
               },
               new String [] {
                    "Código", "De", "Até", "Desconto"
               }
          ));
          tabela_imagens1.setToolTipText("Ao clicar em nome a imagem irá aparecer no brownser");
          tabela_imagens1.addMouseListener(new java.awt.event.MouseAdapter() {
               public void mouseClicked(java.awt.event.MouseEvent evt) {
                    tabela_imagens1MouseClicked(evt);
               }
          });
          jScrollPane4.setViewportView(tabela_imagens1);

          bexcluir_imagem1.setText("Procurar Variação");
          bexcluir_imagem1.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    bexcluir_imagem1ActionPerformed(evt);
               }
          });

          javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
          jPanel6.setLayout(jPanel6Layout);
          jPanel6Layout.setHorizontalGroup(
               jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 48, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(jPanel6Layout.createSequentialGroup()
                              .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addGap(47, 47, 47)
                              .addComponent(bexcluir_imagem1))
                         .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(30, 30, 30))
          );
          jPanel6Layout.setVerticalGroup(
               jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                         .addComponent(bexcluir_imagem1)
                         .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                    .addGap(32, 32, 32))
          );

          jTabbedPane1.addTab("Variações Produto", jPanel6);

          javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
          getContentPane().setLayout(layout);
          layout.setHorizontalGroup(
               layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jTabbedPane1)
          );
          layout.setVerticalGroup(
               layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jTabbedPane1)
          );

          pack();
     }// </editor-fold>//GEN-END:initComponents

     private void tquantidadeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tquantidadeKeyTyped
          mas.mascaraInteiro(evt);
     }//GEN-LAST:event_tquantidadeKeyTyped

     private void bsairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsairActionPerformed
          this.dispose();
     }//GEN-LAST:event_bsairActionPerformed

     private void botao_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_excluirActionPerformed
          String msg      = "";
          int    response = JOptionPane.showConfirmDialog(null, "Tem certeza disso,\n"
               + "Você quer excluir?", "Confirmação de excluir:",
               JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
          if (response == JOptionPane.YES_OPTION) {
               if(produto != null && produto.getCodigo() != null){
                    msg = prn.excluirProduto(cx, produto);
               }else{
                    msg = "Para excluir escolha antes um produto que tenha sido gravada no banco";
               }
          }
          if(msg == null || msg.isEmpty()){
               categorias = csrn.procuraCatProduto(cx, categoria.getCodigo(), produto.getCodigo());
               msg        = csrn.excluirCategoriasProduto(cx, categorias);
               if(msg == null || msg.isEmpty()){
                    obj_categorias.remove(categorias);
                    listar_categorias();
                    obj.remove(produto);
                    limpar();
                    listar();
               }
          }
          if(msg != null && !msg.isEmpty()){
               JOptionPane.showMessageDialog(null, msg);
          }else{
               JOptionPane.showMessageDialog(null, "Excluido com sucesso");
          }
     }//GEN-LAST:event_botao_excluirActionPerformed

     private void botao_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_updateActionPerformed
          String msg;
          try{
               msg = setaProduto();
               if(msg == null || msg.isEmpty()){
                    msg = prn.updateProduto(cx, produto);
                    if(msg == null || msg.isEmpty()){
                         categorias.setCategoria(categoria);
                         categorias.setProduto(produto);
                         msg = csrn.updateCategoriasProduto(cx, categorias);
                         if(msg == null || msg.isEmpty()){
                              for(int i = 0; i < obj_categorias.size(); i++){
                                   if(obj_categorias.get(i).getCodigo() == categorias.getCodigo()){
                                        obj_categorias.set(i, categorias);
                                        listar_categorias();
                                        break;
                                   }
                              }
                              for(int i = 0; i < obj.size(); i++){
                                   if(obj.get(i).getCodigo() == produto.getCodigo()){
                                        obj.set(i, produto);
                                        listar();
                                        break;
                                   }
                              }
                         }
                    }
               }
          }catch(Exception ex){
               msg = "Erro ocasionado por:\n" + ex;
          }
          if(msg != null && !msg.isEmpty()){
               JOptionPane.showMessageDialog(null, msg);
          }else{
               JOptionPane.showMessageDialog(null, "Atualizado com sucesso");
          }
     }//GEN-LAST:event_botao_updateActionPerformed

     private void botao_inserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_inserirActionPerformed
          String msg;
          produto = new Produto();
          msg = setaProduto();
          if(msg == null || msg.isEmpty()){
               msg = prn.inserirProduto(cx, produto);
               if(msg == null || msg.isEmpty()){
                    categorias = new CategoriasProduto();
                    categorias.setCategoria(categoria);
                    categorias.setProduto(produto);
                    msg = csrn.inserirCategoriasProduto(cx, categorias);
                    if(msg == null || msg.isEmpty()){
                         obj_categorias.add(categorias);
                         listar_categorias();
                         obj.add(produto);
                         listar();
                    }
               }
          }
          if(msg != null && !msg.isEmpty()){
               JOptionPane.showMessageDialog(null, msg);
          }else{
               JOptionPane.showMessageDialog(null, "Inserido com sucesso");
          }
     }//GEN-LAST:event_botao_inserirActionPerformed

     private void ccategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccategoriaActionPerformed
          if((obj_categoria != null && !obj_categoria.isEmpty()) && !"Nenhuma".equals(ccategoria.getSelectedItem().toString()) && ccategoria.getSelectedIndex() != -1){
               categoria = obj_categoria.get(ccategoria.getSelectedIndex() - 1);
          }
     }//GEN-LAST:event_ccategoriaActionPerformed

     private void testoquebaixoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_testoquebaixoKeyTyped
          mas.mascaraInteiro(evt);
     }//GEN-LAST:event_testoquebaixoKeyTyped

     private void tcodigobarraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tcodigobarraKeyReleased
          produto = prn.procuraCodigoBarra(cx, tcodigobarra.getText());
          if(produto != null && produto.getCategoria() != null && produto.getNome() != null){
               SetaTelaProduto();
          }
     }//GEN-LAST:event_tcodigobarraKeyReleased

     private void blimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blimparActionPerformed
          produto = new Produto();
          limpar();
     }//GEN-LAST:event_blimparActionPerformed

     private void bcarrega_imagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcarrega_imagemActionPerformed
          String msg;
          try{
               if(produto != null && produto.getCodigo() != null){
                    JFileChooser fc  = new JFileChooser();
                    fc.showOpenDialog(this);
                    File      diretorio = fc.getSelectedFile();
                    String    pasta     = "a/" + produto.getCodigo() + "/";
                    int       qtdimg    = obj_imagem.size() + 1;
                    String    nomearq   = "arquivo" + qtdimg + ".jpg";
                    String    nome      = pasta + "/" + nomearq;
                    boolean   res       = upload.enviar(diretorio.getPath(), "/www/product_images/" + pasta, nomearq);
                    if(res == true){
                         iproduto = new ImagemProduto();
                         iproduto.setNome(nome);
                         iproduto.setProduto(produto);
                         msg = irn.inserirImagemProduto(cx, iproduto);
                    }else{
                         msg = "Erro ao fazer upload do arquivo";
                    }
               }else{
                    msg = "Produto de alguma forma não foi reconhecido, pesquise novamente";
               }
          }catch(Exception ex){
               msg = "Erro causado por:\n" + ex;
          }
          if(msg != null && !msg.isEmpty()){
               JOptionPane.showMessageDialog(null, msg);
          }else{
               obj_imagem.add(iproduto);
               listar_imagem();
               JOptionPane.showMessageDialog(null, "Imagem inserida com sucesso");
          }
     }//GEN-LAST:event_bcarrega_imagemActionPerformed

     private void badiciona_categoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_badiciona_categoriaActionPerformed
          if(categoria != null && categoria.getNome() != null && produto != null && produto.getNome() != null){
               categorias = new CategoriasProduto();
               categorias.setCategoria(categoria);
               categorias.setProduto(produto);
               String msg = csrn.inserirCategoriasProduto(cx, categorias);
               if(msg != null && !msg.isEmpty()){
                    JOptionPane.showMessageDialog(null, msg);
               }else{
                    obj_categorias.add(categorias);
                    listar_categorias();
                    JOptionPane.showMessageDialog(null, "Inserido com sucesso");
               }
          }else{
               JOptionPane.showMessageDialog(null, "A primeira categoria é adicionada automaticamente, use o botão somente quando o produto tiver mais de uma");
          }
     }//GEN-LAST:event_badiciona_categoriaActionPerformed

     private void bchama_cadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bchama_cadastroActionPerformed
          novacategoria = true;
          new JFCategoriaProduto(cx).setVisible(true);
     }//GEN-LAST:event_bchama_cadastroActionPerformed

     private void jPanel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentShown
          tcodigobarra.requestFocus();
     }//GEN-LAST:event_jPanel1ComponentShown

     private void tabela_categoriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabela_categoriasMouseClicked
          try{
               if(obj_categorias != null && !obj_categorias.isEmpty()){
                    categorias = obj_categorias.get(tabela_categorias.getSelectedRow());
                    ccategoria.setSelectedItem(categorias.getCategoria().getNome().toUpperCase());
               }
          }catch(Exception ex){
               JOptionPane.showMessageDialog(null, "Erro ocasionado por:\n" + ex);
          }
     }//GEN-LAST:event_tabela_categoriasMouseClicked

     private void bexcluir_categoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bexcluir_categoriasActionPerformed
          String msg = "";
          if(categorias != null && categorias.getCategoria() != null && categorias.getProduto() != null){
               msg = csrn.excluirCategoriasProduto(cx, categorias);
          }
          if(msg != null && !msg.isEmpty()){
               JOptionPane.showMessageDialog(null, msg);
          }else{
               obj_categorias.remove(categorias);
               listar_categorias();
               JOptionPane.showMessageDialog(null, "Excluido com sucesso");
          }
     }//GEN-LAST:event_bexcluir_categoriasActionPerformed

     private void bprocurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bprocurarActionPerformed
          obj = prn.procuraNomeParcial(cx, tnomeproc.getText());
          if(obj != null && !obj.isEmpty()){
               listar();
          }else{
               JOptionPane.showMessageDialog(null, "Nada encontrado");
          }
     }//GEN-LAST:event_bprocurarActionPerformed

     private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
          produto = obj.get(tabela.getSelectedRow());
          SetaTelaProduto();
     }//GEN-LAST:event_tabelaMouseClicked

     private void bsair2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsair2ActionPerformed
          this.dispose();
     }//GEN-LAST:event_bsair2ActionPerformed

     private void bexcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bexcluirActionPerformed
          String msg      = "";
          int    response = JOptionPane.showConfirmDialog(null, "Tem certeza disso,\n"
               + "Você quer excluir?", "Confirmação de excluir:",
               JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
          if (response == JOptionPane.YES_OPTION) {
               if(desconto != null && desconto.getCodigo() != null){
                    msg = drn.excluirDesconto(cx, desconto);
               }else{
                    msg = "Para excluir escolha antes uma regra de desconto que tenha sido gravada no banco";
               }
          }
          if(msg != null && !msg.isEmpty()){
               JOptionPane.showMessageDialog(null, msg);
          }else{
               limpar();
               JOptionPane.showMessageDialog(null, "Excluido com sucesso");
          }
     }//GEN-LAST:event_bexcluirActionPerformed

     private void bupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bupdateActionPerformed
          setaDesconto();
          String msg = drn.updateDesconto(cx, desconto);
          if(msg != null && !msg.isEmpty()){
               JOptionPane.showMessageDialog(null, msg);
          }else{
               JOptionPane.showMessageDialog(null, "Atualizado com sucesso");
          }
     }//GEN-LAST:event_bupdateActionPerformed

     private void binserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binserirActionPerformed
          desconto = new Desconto();
          setaDesconto();
          String msg = drn.inserirDesconto(cx, desconto);
          if(msg != null && !msg.isEmpty()){
               JOptionPane.showMessageDialog(null, msg);
          }else{
               JOptionPane.showMessageDialog(null, "Inserido com sucesso");
          }
     }//GEN-LAST:event_binserirActionPerformed

     private void tabela_imagensMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabela_imagensMouseClicked
          try{
               if(obj_imagem != null && !obj_imagem.isEmpty()){
                    iproduto = obj_imagem.get(tabela_imagens.getSelectedRow());
                    if(tabela_imagens.getSelectedColumn() == 1){
                         if(loja != null && loja.getSite() != null){
                              Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler " + loja.getSite() +"/product_images/" + iproduto.getNome());
                         }else{
                              JOptionPane.showMessageDialog(null, "Erro não tem link do site para mostrar a imagem.");
                         }
                    }
               }
          } catch (Exception ex) {
               JOptionPane.showMessageDialog(null, "Erro causado por:\n" + ex);
          }
     }//GEN-LAST:event_tabela_imagensMouseClicked

     private void bexcluir_imagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bexcluir_imagemActionPerformed
          String msg      = "";
          if(iproduto != null && iproduto.getCodigo() != null){
               int    response = JOptionPane.showConfirmDialog(null, "Tem certeza disso,\n"
                    + "Você quer excluir?", "Confirmação de excluir:",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
               if (response == JOptionPane.YES_OPTION) {
                    msg = irn.excluirImagemProduto(cx, iproduto);
                    upload.excluir("/product_images/" + iproduto.getNome());
               }
          }else{
               msg = "Para excluir escolha antes uma imagem de produto que tenha sido gravada no banco";
          }
          if(msg != null && !msg.isEmpty()){
               JOptionPane.showMessageDialog(null, msg);
          }else{
               obj_imagem.remove(iproduto);
               listar_imagem();
               JOptionPane.showMessageDialog(null, "Excluido com sucesso");
          }
     }//GEN-LAST:event_bexcluir_imagemActionPerformed

     private void jTabbedPane1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTabbedPane1FocusGained
          atualizaPrecoVenda();
          if(novacategoria == true){
               carregaCategoria();
               novacategoria = false;
          }
          if(atualizafornecedor  == true){
               carregaFabrica();
               atualizafornecedor = false;
          }
          if(atualizavendedor  == true){
               carregaVendedor();
               atualizavendedor = false;
          }          
     }//GEN-LAST:event_jTabbedPane1FocusGained

     private void ccategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ccategoriaMouseClicked
          if(novacategoria == true){
               carregaCategoria();
               novacategoria = false;
          }
     }//GEN-LAST:event_ccategoriaMouseClicked

     private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
          carregaVendedor();
          carregaCategoria();
          carregaFabrica();
     }//GEN-LAST:event_formWindowOpened

     private void cfornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cfornecedorActionPerformed
          try{
               if((obj_pessoa != null && !obj_pessoa.isEmpty() && !"Nenhuma".equals(cfornecedor.getSelectedItem().toString())) && cfornecedor.getSelectedIndex() != -1){
                    pessoa = obj_pessoa.get(cfornecedor.getSelectedIndex() - 1);
               }
          }catch(Exception ex){
               JOptionPane.showMessageDialog(null, "Erro causado por:\n" + ex);
          }
     }//GEN-LAST:event_cfornecedorActionPerformed

     private void tabela_imagens1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabela_imagens1MouseClicked
          // TODO add your handling code here:
     }//GEN-LAST:event_tabela_imagens1MouseClicked

     private void bexcluir_imagem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bexcluir_imagem1ActionPerformed
          // TODO add your handling code here:
     }//GEN-LAST:event_bexcluir_imagem1ActionPerformed

     private void badicionar_fornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_badicionar_fornecedorActionPerformed
          atualizafornecedor = true;
          new JFGerenciaPessoa(cx).setVisible(true);
     }//GEN-LAST:event_badicionar_fornecedorActionPerformed

     private void cfornecedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cfornecedorMouseClicked
          if(atualizafornecedor  == true){
               carregaFabrica();
               atualizafornecedor = false;
          }
     }//GEN-LAST:event_cfornecedorMouseClicked

     private void jPanel1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel1FocusGained
          atualizaPrecoVenda();
     }//GEN-LAST:event_jPanel1FocusGained

     private void bcalculavendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcalculavendaActionPerformed
          calculaPrecoVenda();
     }//GEN-LAST:event_bcalculavendaActionPerformed

     private void badicionar_vendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_badicionar_vendedorActionPerformed
          atualizavendedor = true;
          new JFGerenciaVendedor(cx).setVisible(true);
     }//GEN-LAST:event_badicionar_vendedorActionPerformed

     private void cvendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cvendedorActionPerformed
          try{
               if((obj_vendedor != null && !obj_vendedor.isEmpty() && !"Nenhuma".equals(cvendedor.getSelectedItem().toString())) && cvendedor.getSelectedIndex() != -1){
                    vendedor = obj_vendedor.get(cvendedor.getSelectedIndex() - 1);
               }
          }catch(Exception ex){
               JOptionPane.showMessageDialog(null, "Erro causado por:\n" + ex);
          }
     }//GEN-LAST:event_cvendedorActionPerformed

     /**
      * @param args the command line arguments
      */
     public static void main(String args[]) {
          /* Set the Nimbus look and feel */
          //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
           * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
           */
          try {
               for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                         javax.swing.UIManager.setLookAndFeel(info.getClassName());
                         break;
                    }
               }
          } catch (Exception ex) {
               java.util.logging.Logger.getLogger(JFAvancadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          }
          //</editor-fold>

          /* Create and display the form */
          java.awt.EventQueue.invokeLater(new Runnable() {
               @Override
               public void run() {
                    new JFGerenciaProduto().setVisible(true);
               }
          });
     }
     // Variables declaration - do not modify//GEN-BEGIN:variables
     private javax.swing.JLabel Profundidade;
     private javax.swing.JButton badiciona_categoria;
     private javax.swing.JButton badicionar_fornecedor;
     private javax.swing.JButton badicionar_vendedor;
     private javax.swing.JButton bupdate;
     private javax.swing.JButton bcalculavenda;
     private javax.swing.JButton bcarrega_imagem;
     private javax.swing.JButton bchama_cadastro;
     private javax.swing.JButton bexcluir;
     private javax.swing.JButton bexcluir_categorias;
     private javax.swing.JButton bexcluir_imagem;
     private javax.swing.JButton bexcluir_imagem1;
     private javax.swing.JButton binserir;
     private javax.swing.JButton blimpar;
     private javax.swing.JButton botao_update;
     private javax.swing.JButton botao_excluir;
     private javax.swing.JButton botao_inserir;
     private javax.swing.JButton bprocurar;
     private javax.swing.JButton bsair;
     private javax.swing.JButton bsair2;
     private javax.swing.JComboBox ccategoria;
     private javax.swing.JComboBox cfornecedor;
     private javax.swing.JComboBox cvendedor;
     private javax.swing.JCheckBox cvisivel;
     private javax.swing.JCheckBox cvisivel2;
     private javax.swing.JLabel jLabel1;
     private javax.swing.JLabel jLabel10;
     private javax.swing.JLabel jLabel11;
     private javax.swing.JLabel jLabel12;
     private javax.swing.JLabel jLabel13;
     private javax.swing.JLabel jLabel14;
     private javax.swing.JLabel jLabel15;
     private javax.swing.JLabel jLabel16;
     private javax.swing.JLabel jLabel17;
     private javax.swing.JLabel jLabel18;
     private javax.swing.JLabel jLabel19;
     private javax.swing.JLabel jLabel2;
     private javax.swing.JLabel jLabel20;
     private javax.swing.JLabel jLabel21;
     private javax.swing.JLabel jLabel22;
     private javax.swing.JLabel jLabel23;
     private javax.swing.JLabel jLabel3;
     private javax.swing.JLabel jLabel4;
     private javax.swing.JLabel jLabel5;
     private javax.swing.JLabel jLabel6;
     private javax.swing.JLabel jLabel7;
     private javax.swing.JLabel jLabel8;
     private javax.swing.JLabel jLabel9;
     private javax.swing.JPanel jPanel1;
     private javax.swing.JPanel jPanel2;
     private javax.swing.JPanel jPanel3;
     private javax.swing.JPanel jPanel4;
     private javax.swing.JPanel jPanel5;
     private javax.swing.JPanel jPanel6;
     private javax.swing.JScrollPane jScrollPane1;
     private javax.swing.JScrollPane jScrollPane2;
     private javax.swing.JScrollPane jScrollPane3;
     private javax.swing.JScrollPane jScrollPane4;
     private javax.swing.JTabbedPane jTabbedPane1;
     private javax.swing.JTextField jTextField1;
     private javax.swing.JTable tabela;
     private javax.swing.JTable tabela_categorias;
     private javax.swing.JTable tabela_imagens;
     private javax.swing.JTable tabela_imagens1;
     private javax.swing.JTextField taltura;
     private javax.swing.JTextField tcodigobarra;
     private javax.swing.JTextField tcomissao;
     private javax.swing.JTextField tdesconto;
     private javax.swing.JTextField testoquebaixo;
     private javax.swing.JTextField tlargura;
     private javax.swing.JTextField tnome;
     private javax.swing.JTextField tnomeproc;
     private javax.swing.JTextField tpalavrachave;
     private javax.swing.JTextField tpeso;
     private javax.swing.JTextField tprecocusto;
     private javax.swing.JTextField tpreconormal;
     private javax.swing.JTextField tprecovarejo;
     private javax.swing.JTextField tprecovenda;
     private javax.swing.JTextField tprod_desconto;
     private javax.swing.JTextField tprofundidade;
     private javax.swing.JTextField tqtdmax;
     private javax.swing.JTextField tqtdmin;
     private javax.swing.JTextField tquantidade;
     private javax.swing.JTextField tvalor;
     // End of variables declaration//GEN-END:variables

    private void listar_categorias() {
            tabela_categorias.setModel(new TableModel(titulo_categorias, obj_categorias.size(), titulo_categorias.length));
            for(int i = 0; i < obj_categorias.size(); i++){
                    tabela_categorias.setValueAt(obj_categorias.get(i).getCategoria().getCodigo(), i, 0);
                    tabela_categorias.setValueAt(obj_categorias.get(i).getCategoria().getNome().toUpperCase(), i, 1);
            }
            tabela.setAutoCreateRowSorter(true);    
    }       
     
    private void listar() {
            tabela.setModel(new TableModel(titulo, obj.size(), titulo.length));
            for(int i = 0; i < obj.size(); i++){
                    tabela.setValueAt(obj.get(i).getCodigo(), i, 0);
                    tabela.setValueAt(obj.get(i).getNome().toUpperCase(), i, 1);
                    if(obj.get(i).getPrecovenda() == 0){
                         tabela.setValueAt(Mascara.formatMoeda(obj.get(i).getPreconormal()), i, 2);
                    }else{
                         tabela.setValueAt(Mascara.formatMoeda(obj.get(i).getPrecovenda()), i, 2);
                    }
                    tabela.setValueAt(obj.get(i).getQuantidade(), i, 3);
            }
            tabela.setAutoCreateRowSorter(true);    
    }  

    private void listar_imagem() {
         try{
              if(titulo_imagens != null && obj_imagem != null && !obj_imagem.isEmpty()){
                    tabela_imagens.setModel(new TableModel(titulo_imagens, obj_imagem.size(), titulo_imagens.length));
                    for(int i=0; i < obj_imagem.size(); i++){
                            tabela_imagens.setValueAt(obj_imagem.get(i).getCodigo(), i, 0);
                            tabela_imagens.setValueAt(obj_imagem.get(i).getNome(), i, 1);
                    }
                    tabela_imagens.setAutoCreateRowSorter(true);
              }
         }catch(Exception ex){
              JOptionPane.showMessageDialog(null,"Erro em listar imagens causado por:\n" + ex);
         }
    }      
    
     private void SetaTelaProduto() {
          try{
               if(produto.getCodvendedor() != 0){
                    vendedor = vrn.procuraCodVendedor(cx, produto.getCodvendedor());
                    if(vendedor != null && vendedor.getCodigo() != null){
                         cvendedor.setSelectedItem(vendedor.getNome().toUpperCase());
                    }
               }
               tdesconto.setText(mas.ColocaVirgula(produto.getDesconto()));
               if(produto.getFabrica() != null && produto.getFabrica().getNome() != null){
                    cfornecedor.setSelectedItem(produto.getFabrica().getNome().toUpperCase());
               }else{
                    cfornecedor.setSelectedItem("Nenhuma");
               }
               if(produto.getCategoria() == null || produto.getCategoria().getCodigo() == null){
                    ccategoria.setSelectedItem("Nenhuma");
               }else{
                    if(produto.getCategoria() != null && produto.getCategoria().getCodigo() != null){
                         ccategoria.setSelectedItem(produto.getCategoria().getNome());
                    }
               }
               obj_categorias = csrn.procuraProduto(cx, produto.getCodigo());
               if(obj_categorias != null && !obj_categorias.isEmpty()){
                    listar_categorias();
                    if(produto.getCategoria() == null || produto.getCategoria().getNome() == null){
                         ccategoria.setSelectedItem(obj.get(0).getNome().toString().toUpperCase());
                    }
               }
               tnome.setText(produto.getNome().toUpperCase());
               tprod_desconto.setText(produto.getNome().toUpperCase());
               tprecocusto.setText(Mascara.formatMoeda(produto.getPrecocusto()));
               tpreconormal.setText(Mascara.formatMoeda(produto.getPreconormal()));
               tprecovarejo.setText(Mascara.formatMoeda(produto.getPrecovarejo()));
               tprecovenda.setText(Mascara.formatMoeda(produto.getPrecovenda()));
               tquantidade.setText(String.valueOf(produto.getQuantidade()));
               testoquebaixo.setText(String.valueOf(produto.getEstoquebaixo()));
               tprofundidade.setText(mas.ColocaVirgula(produto.getProfundidade()));
               tlargura.setText(mas.ColocaVirgula(produto.getLargura()));
               taltura.setText(mas.ColocaVirgula(produto.getAltura()));
               tpeso.setText(mas.ColocaVirgula(produto.getPeso()));
               tcodigobarra.setText(produto.getCodigobarra());
               tpalavrachave.setText(produto.getPalavrachave());
               desconto = drn.procuraCodProduto(cx, produto.getCodigo());
               SetaTelaDesconto();
               obj_imagem = irn.procuraCodImagemProduto(cx, produto.getCodigo());
               if(obj_imagem != null && !obj_imagem.isEmpty()){
                    listar_imagem();
               }else{
                    obj_imagem = new ArrayList();
               }          
               if(produto.getProdutovisivel() == 1){
                    cvisivel.setSelected(true);
               }else{
                    cvisivel.setSelected(false);
               }
               if(produto.getCaracteristicavisivel()== 1){
                    cvisivel2.setSelected(true);
               }else{
                    cvisivel2.setSelected(false);
               }    
          }catch(Exception ex){
               JOptionPane.showMessageDialog(null, "Erro ao definir produto:\n" + ex);
          }
     }

     private String setaProduto() {
          String msg = "";
          try{
               if(msg.isEmpty()){
                    if(vendedor != null && vendedor.getNome() != null){
                         produto.setCodvendedor(vendedor.getCodigo());
                    }
                    if(pessoa != null && pessoa.getNome() != null){
                         produto.setFabrica(pessoa);
                    }
                    produto.setPalavrachave(tpalavrachave.getText());
                    if(categoria != null && categoria.getCodigo() != null){
                         produto.setCategoria(categoria);
                    }
                    produto.setNome(tnome.getText().toUpperCase());
                    if(taltura.getText() == null || taltura.getText().isEmpty()){
                         taltura.setText("0");
                    }
                    produto.setAltura(mas.TiraVirgula(taltura.getText()));
                    if(tpeso.getText() == null || tpeso.getText().isEmpty()){
                         tpeso.setText("0");
                    }
                    produto.setPeso(mas.TiraVirgula(tpeso.getText()));
                    if(tprecovenda.getText() == null || tprecovenda.getText().isEmpty()){
                         produto.setPrecovenda(Mascara.formatToDouble("0"));
                    }else{
                         produto.setPrecovenda(Mascara.formatToDouble(tprecovenda.getText()));
                    }
                    
                    if(tprecocusto.getText() == null || tprecocusto.getText().isEmpty()){
                         produto.setPrecocusto(Mascara.formatToDouble(tprecocusto.getText()));
                    }else{
                         produto.setPrecocusto(Mascara.formatToDouble(tprecocusto.getText()));
                    }
                    
                    if(tpreconormal.getText() == null || tpreconormal.getText().isEmpty()){
                         produto.setPreconormal(Mascara.formatToDouble(tpreconormal.getText()));
                    }else{
                         produto.setPreconormal(Mascara.formatToDouble(tpreconormal.getText()));
                    }
                    
                    if(tprecovarejo.getText() == null || tprecovarejo.getText().isEmpty()){
                         produto.setPrecovarejo(Mascara.formatToDouble(tprecovarejo.getText()));
                    }else{
                         produto.setPrecovarejo(Mascara.formatToDouble(tprecovarejo.getText()));
                    }
                    
                    if(tquantidade.getText() == null || tquantidade.getText().isEmpty()){
                         tquantidade.setText("0");
                    }
                    produto.setQuantidade(Integer.valueOf(tquantidade.getText()));
                    if(tlargura.getText() == null || tlargura.getText().isEmpty()){
                         tlargura.setText("0");
                    }
                    produto.setLargura(mas.TiraVirgula(tlargura.getText()));
                    if(tprofundidade.getText() == null || tprofundidade.getText().isEmpty()){
                         tprofundidade.setText("0");
                    }
                    produto.setProfundidade(mas.TiraVirgula(tprofundidade.getText()));
                    if(testoquebaixo.getText() == null || testoquebaixo.getText().isEmpty()){
                         testoquebaixo.setText("0");
                    }
                    produto.setEstoquebaixo(Integer.valueOf(testoquebaixo.getText()));
                    produto.setCodigobarra(tcodigobarra.getText());
                    produto.setPreconormal(Mascara.formatToDouble(tpreconormal.getText()));
                    produto.setDesconto(mas.TiraVirgula(tdesconto.getText()));
                    if(cvisivel.isSelected() == true){
                         produto.setProdutovisivel(1);
                    }else{
                         produto.setProdutovisivel(0);
                    }
                    if(cvisivel2.isSelected() == true){
                         produto.setCaracteristicavisivel(1);
                    }else{
                         produto.setCaracteristicavisivel(0);
                    }    
               }
          }catch(Exception ex){
               msg = "Erro ocasionado por:\n" + ex;
          }
          return msg;
     }

     private void limpar() {
          tcodigobarra.setText("");
          tprofundidade.setText("");
          testoquebaixo.setText("");
          tlargura.setText("");
          taltura.setText("");
          tpeso.setText("");
          tprofundidade.setText("");
          tnome.setText("");
          tprecocusto.setText("");
          tpreconormal.setText("");
          tprecovarejo.setText("");
          tprecovenda.setText("");
          tquantidade.setText("");
          tpalavrachave.setText("");
          obj_categorias = new ArrayList();
          obj_desconto   = new ArrayList();
          obj_imagem     = new ArrayList();
          tdesconto.setText("");
          listar_categorias();
          listar_imagem();
     }

     private void setaDesconto() {
          desconto.setProduto(produto);
          desconto.setQtdmax(Integer.valueOf(tqtdmin.getText()));
          desconto.setQtdmin(Integer.valueOf(tqtdmax.getText()));
          String preco = tvalor.getText();
          preco        = preco.replace("R$ ", "");
          desconto.setValor(Mascara.formatToDouble(preco));
     }

     private void SetaTelaDesconto() {
          tqtdmin.setText(String.valueOf(desconto.getQtdmax()));
          tqtdmax.setText(String.valueOf(desconto.getQtdmin()));
          tvalor.setText(Mascara.formatMoeda(desconto.getValor()));
     }

     private void procuraLoja() {
          List<Loja> objl = lrn.procuraTodos(cx);
          if(objl != null && !objl.isEmpty()){
               if(objl.size() > 1){
                    JOptionPane.showMessageDialog(null, "Erro ao obter configurações de upload, foram gravadas mais de uma no banco. Por favor exclua uma");
               }else{
                    Iterator it = objl.iterator();
                    while(it.hasNext()){
                         loja = (Loja)it.next();
                    }
                    if(loja != null && loja.getSite() != null){
                         upload = new Upload(loja.getLinkftp(), loja.getLogin(), loja.getSenha());                         
                    }
               }
          }
     }

     private void carregaCategoria() {
          obj_categoria = crn.procuraTodos(cx);
          if(obj_categoria != null && !obj_categoria.isEmpty()){
               ccategoria.removeAllItems();
               ccategoria.addItem("Nenhuma");
               for (CategoriaProduto ct : obj_categoria) {
                    ccategoria.addItem(ct.getNome().toUpperCase());
               }
          }else{
               ccategoria.setToolTipText("Nenhuma categoria cadastrada");
          }
     }

     private void carregaFabrica() {
          obj_pessoa = pern.procuraTtipo(cx, "FÁBRICA".toUpperCase());
          if(obj_pessoa != null && !obj_pessoa.isEmpty()){
               cfornecedor.removeAllItems();
               cfornecedor.addItem("Nenhuma");
               for (Pessoa p : obj_pessoa) {
                    cfornecedor.addItem(p.getNome().toUpperCase());
               }
          }else{
               cfornecedor.setToolTipText("Nenhum fabricante cadastrado");
          }          
     }

     private void carregaVendedor() {
          obj_vendedor = vrn.procuraTodos(cx);
          if(obj_vendedor != null && !obj_vendedor.isEmpty()){
               cvendedor.removeAllItems();
               cvendedor.addItem("Nenhuma");
               for (Vendedor v : obj_vendedor) {
                    cvendedor.addItem(v.getNome().toUpperCase());
               }               
          }else{
               cvendedor.setToolTipText("Nenhum vendedor cadastrado");
          }
     }     
     
     //atualiza preço de venda com base no preço de custo * a comissão porcentual da loja
     private void atualizaPrecoVenda() {
          if(tcomissao.getText() != null && !tcomissao.getText().isEmpty() && tprecocusto.getText() != null && !tprecocusto.getText().isEmpty()
             && (tprecovenda.getText() == null || tprecovenda.getText().isEmpty() || tprecovenda.getText().equals("R$ 0,00"))){
               calculaPrecoVenda();
          }
     }

     private void calculaPrecoVenda() {
               double comissao = mas.TiraVirgula(tcomissao.getText());
               comissao        = comissao / 100;
               double custo    = Mascara.formatToDouble(tprecocusto.getText());
               double venda    = custo + (custo * comissao);
               tprecovenda.setText(Mascara.formatMoeda(venda));
     }

}
